name: PR Review and Quality Check

on:
  pull_request:
    branches: [main]
  pull_request_review:
    types: [submitted]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: false

      - name: Run tests
        run: npm test
        continue-on-error: false

      - name: Build project
        run: npm run build
        continue-on-error: false

      - name: Comment PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const approvedReviews = reviews.filter(review => review.state === 'APPROVED');
            const hasApproval = approvedReviews.length > 0;
            
            let message = `## 🤖 自動品質チェック結果\n\n`;
            message += `- ✅ リント: 通過\n`;
            message += `- ✅ テスト: 通過\n`;
            message += `- ✅ ビルド: 成功\n\n`;
            
            if (hasApproval) {
              message += `✅ **レビュー承認済み** - 自動マージの準備ができました\n`;
              message += `このPRは品質チェックに合格し、承認されています。自動マージが実行されます。`;
            } else {
              message += `⏳ **レビュー待ち** - 承認後に自動マージされます\n`;
              message += `品質チェックは通過しました。レビュアーの承認をお待ちください。`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  auto-merge:
    needs: quality-check
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Auto-merge PR
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              commit_title: `Merge PR #${context.issue.number}`,
              commit_message: 'Auto-merged after successful review and quality checks',
              merge_method: 'squash'
            });
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🎉 **自動マージ完了!** \n\nPRが正常にマージされました。GitHub Pagesへのデプロイが開始されます。'
            });