export const nodeTypes = {
  inputNode: {
    name: 'Input',
    description: 'Accepts user input or file uploads',
    category: 'input',
    inputs: [],
    outputs: ['output'],
    icon: '📥',
  },
  outputNode: {
    name: 'Output',
    description: 'Displays or saves output data',
    category: 'output',
    inputs: ['input'],
    outputs: [],
    icon: '📤',
  },
  llmNode: {
    name: 'LLM',
    description: 'Processes text using Language Models',
    category: 'ai',
    inputs: ['input'],
    outputs: ['output'],
    icon: '🤖',
  },
  httpRequestNode: {
    name: 'HTTP Request',
    description: 'Makes HTTP/API requests',
    category: 'network',
    inputs: ['input'],
    outputs: ['output', 'error'],
    icon: '🌐',
  },
  webAPINode: {
    name: 'Web API',
    description: 'Connects to external web APIs',
    category: 'network',
    inputs: ['input'],
    outputs: ['output', 'error'],
    icon: '🔌',
  },
  webSearchNode: {
    name: 'Web Search',
    description: 'Searches the web for information',
    category: 'network',
    inputs: ['query'],
    outputs: ['results'],
    icon: '🔍',
  },
  textCombinerNode: {
    name: 'Text Combiner',
    description: 'Combines multiple text inputs',
    category: 'transform',
    inputs: ['input1', 'input2'],
    outputs: ['output'],
    icon: '🔗',
  },
  upperCaseNode: {
    name: 'Uppercase',
    description: 'Converts text to uppercase',
    category: 'transform',
    inputs: ['input'],
    outputs: ['output'],
    icon: '🔠',
  },
  dataTransformNode: {
    name: 'Data Transform',
    description: 'Transforms data using custom logic',
    category: 'transform',
    inputs: ['input'],
    outputs: ['output'],
    icon: '🔄',
  },
  jsonTransformNode: {
    name: 'JSON Transform',
    description: 'Transforms JSON data structure',
    category: 'transform',
    inputs: ['input'],
    outputs: ['output'],
    icon: '📋',
  },
  arrayOperationsNode: {
    name: 'Array Operations',
    description: 'Performs operations on arrays',
    category: 'transform',
    inputs: ['array'],
    outputs: ['output'],
    icon: '📚',
  },
  variableSetNode: {
    name: 'Variable Set',
    description: 'Sets and stores variables',
    category: 'control',
    inputs: ['input'],
    outputs: ['output'],
    icon: '💾',
  },
  ifNode: {
    name: 'If Condition',
    description: 'Conditional branching logic',
    category: 'control',
    inputs: ['condition', 'input'],
    outputs: ['true', 'false'],
    icon: '🔀',
  },
  whileNode: {
    name: 'While Loop',
    description: 'Loops while condition is true',
    category: 'control',
    inputs: ['condition', 'input'],
    outputs: ['output', 'done'],
    icon: '🔁',
  },
  scheduleNode: {
    name: 'Schedule',
    description: 'Schedules execution at specific times',
    category: 'control',
    inputs: ['input'],
    outputs: ['output'],
    icon: '⏰',
  },
  codeExecutionNode: {
    name: 'Code Execution',
    description: 'Executes custom JavaScript code',
    category: 'advanced',
    inputs: ['input'],
    outputs: ['output', 'error'],
    icon: '💻',
  },
  timestampNode: {
    name: 'Timestamp',
    description: 'Generates current timestamp',
    category: 'utility',
    inputs: [],
    outputs: ['timestamp'],
    icon: '🕐',
  },
  structuredExtractionNode: {
    name: 'Structured Extraction',
    description: 'Extracts structured data from text',
    category: 'ai',
    inputs: ['input'],
    outputs: ['output', 'error'],
    icon: '📊',
  },
  structuredExtractionValidatorNode: {
    name: 'Extraction Validator',
    description: 'Validates extracted structured data',
    category: 'validation',
    inputs: ['input'],
    outputs: ['valid', 'invalid'],
    icon: '✅',
  },
};

export const nodeCategories = {
  input: {
    name: 'Input',
    color: '#10B981',
    description: 'Data input nodes',
  },
  output: {
    name: 'Output',
    color: '#F59E0B',
    description: 'Data output nodes',
  },
  transform: {
    name: 'Transform',
    color: '#3B82F6',
    description: 'Data transformation nodes',
  },
  control: {
    name: 'Control Flow',
    color: '#8B5CF6',
    description: 'Logic and flow control nodes',
  },
  network: {
    name: 'Network',
    color: '#EF4444',
    description: 'Network and API nodes',
  },
  ai: {
    name: 'AI/ML',
    color: '#EC4899',
    description: 'AI and machine learning nodes',
  },
  utility: {
    name: 'Utility',
    color: '#6B7280',
    description: 'Utility and helper nodes',
  },
  advanced: {
    name: 'Advanced',
    color: '#DC2626',
    description: 'Advanced functionality nodes',
  },
  validation: {
    name: 'Validation',
    color: '#16A34A',
    description: 'Data validation nodes',
  },
};